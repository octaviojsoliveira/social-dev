{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\DEV\\\\Projeto-Social-Dev\\\\src\\\\pages\\\\Profile\\\\Followers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport { useParams } from 'react-router-dom';\nimport http from '../../utils/axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nfunction Connection() {\n  _s();\n\n  const classes = useStyles();\n  const params = useParams();\n  const [followers, setFollowers] = useState([]);\n  useEffect(() => {\n    async function fetchFollowers() {\n      try {\n        const response = await http.get(`/api/connections/followers/${params.username}`);\n        setFollowers(response.data.followers);\n      } catch (error) {}\n    }\n\n    fetchFollowers();\n  }, [params]);\n  return /*#__PURE__*/_jsxDEV(List, {\n    dense: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n      children: \"Seguidores (4)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), followers.map(value => {\n      const labelId = `checkbox-list-secondary-label-${value}`;\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: value.user.username,\n            src: value.user.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          id: labelId,\n          primary: value.user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: !value.following && /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Seguir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Connection, \"kKw9R1IVJWO6D8A+ohF+d4bu+jk=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = Connection;\nexport default Connection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"sources":["E:/DEV/Projeto-Social-Dev/src/pages/Profile/Followers.js"],"names":["React","useState","useEffect","makeStyles","List","ListItem","ListItemSecondaryAction","ListItemText","ListItemAvatar","ListSubheader","Avatar","Button","useParams","http","useStyles","theme","root","width","backgroundColor","palette","background","paper","Connection","classes","params","followers","setFollowers","fetchFollowers","response","get","username","data","error","map","value","labelId","user","avatar","following"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,MAAMC,SAAS,GAAGX,UAAU,CAAEY,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,eAAe,EAAEH,KAAK,CAACI,OAAN,CAAcC,UAAd,CAAyBC;AAFtC;AADiC,CAAZ,CAAD,CAA5B;;AAOA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAMU,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeyB,cAAf,GAAgC;AAC9B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMf,IAAI,CAACgB,GAAL,CACpB,8BAA6BL,MAAM,CAACM,QAAS,EADzB,CAAvB;AAGAJ,QAAAA,YAAY,CAACE,QAAQ,CAACG,IAAT,CAAcN,SAAf,CAAZ;AACD,OALD,CAKE,OAAOO,KAAP,EAAc,CAAE;AACnB;;AACDL,IAAAA,cAAc;AACf,GAVQ,EAUN,CAACH,MAAD,CAVM,CAAT;AAYA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,SAAS,EAAED,OAAO,CAACP,IAA/B;AAAA,4BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGS,SAAS,CAACQ,GAAV,CAAeC,KAAD,IAAW;AACxB,YAAMC,OAAO,GAAI,iCAAgCD,KAAM,EAAvD;AACA,0BACE,QAAC,QAAD;AAAsB,QAAA,MAAM,MAA5B;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAEA,KAAK,CAACE,IAAN,CAAWN,QAAxB;AAAkC,YAAA,GAAG,EAAEI,KAAK,CAACE,IAAN,CAAWC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,YAAD;AAAc,UAAA,EAAE,EAAEF,OAAlB;AAA2B,UAAA,OAAO,EAAED,KAAK,CAACE,IAAN,CAAWN;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,uBAAD;AAAA,oBACG,CAACI,KAAK,CAACI,SAAP,iBAAoB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADvB;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,SAAeJ,KAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAbA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GApCQZ,U;UACSR,S,EACDF,S;;;KAFRU,U;AAsCT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport http from '../../utils/axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nfunction Connection() {\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n  const [followers, setFollowers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchFollowers() {\r\n      try {\r\n        const response = await http.get(\r\n          `/api/connections/followers/${params.username}`,\r\n        );\r\n        setFollowers(response.data.followers);\r\n      } catch (error) {}\r\n    }\r\n    fetchFollowers();\r\n  }, [params]);\r\n\r\n  return (\r\n    <List dense className={classes.root}>\r\n      <ListSubheader>Seguidores (4)</ListSubheader>\r\n      {followers.map((value) => {\r\n        const labelId = `checkbox-list-secondary-label-${value}`;\r\n        return (\r\n          <ListItem key={value} button>\r\n            <ListItemAvatar>\r\n              <Avatar alt={value.user.username} src={value.user.avatar} />\r\n            </ListItemAvatar>\r\n            <ListItemText id={labelId} primary={value.user.username} />\r\n            <ListItemSecondaryAction>\r\n              {!value.following && <Button>Seguir</Button>}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default Connection;"]},"metadata":{},"sourceType":"module"}