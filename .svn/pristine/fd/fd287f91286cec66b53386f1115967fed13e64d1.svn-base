{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\DEV\\\\Projeto-Social-Dev\\\\src\\\\pages\\\\Home\\\\components\\\\Header\\\\Notifications.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { Bell as BellIcon, Star as StarIcon, MessageCircle as MessageIcon, Heart as HeartIcon, User as ConnectionIcon } from 'react-feather';\nimport { getNotifications } from '../../../../actions/notificationsActions';\nconst iconsMap = {\n  reviews: StarIcon,\n  new_comment: MessageIcon,\n  like: HeartIcon,\n  connection: ConnectionIcon\n};\n\nfunction Notifications() {\n  _s();\n\n  const account = useSelector(state => state.account);\n  const isAuthenticated = !!account.user;\n  const notifications = useSelector(state => state.notifications);\n  const ref = useRef(null);\n  const [isOpen, setOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(getNotifications());\n  }, [dispatch]);\n  return isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      ref: ref,\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(SvgIcon, {\n        children: /*#__PURE__*/_jsxDEV(BellIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      onCLose: handleClose,\n      open: isOpen,\n      anchorEl: ref.current,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"textPrimary\",\n          children: \"Notifica\\xE7\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Notifications, \"sU25qeqzDN6Yk+n6XmVhcw5jZE0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Notifications;\nexport default Notifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"sources":["E:/DEV/Projeto-Social-Dev/src/pages/Home/components/Header/Notifications.js"],"names":["React","useRef","useState","useEffect","useSelector","useDispatch","SvgIcon","IconButton","Popover","Typography","Box","Bell","BellIcon","Star","StarIcon","MessageCircle","MessageIcon","Heart","HeartIcon","User","ConnectionIcon","getNotifications","iconsMap","reviews","new_comment","like","connection","Notifications","account","state","isAuthenticated","user","notifications","ref","isOpen","setOpen","dispatch","handleOpen","handleClose","current","vertical","horizontal"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SACEC,IAAI,IAAIC,QADV,EAEEC,IAAI,IAAIC,QAFV,EAGEC,aAAa,IAAIC,WAHnB,EAIEC,KAAK,IAAIC,SAJX,EAKEC,IAAI,IAAIC,cALV,QAMO,eANP;AAQA,SAASC,gBAAT,QAAiC,0CAAjC;AAGA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,OAAO,EAAET,QADM;AAEfU,EAAAA,WAAW,EAAER,WAFE;AAGfS,EAAAA,IAAI,EAAEP,SAHS;AAIfQ,EAAAA,UAAU,EAAEN;AAJG,CAAjB;;AAOA,SAASO,aAAT,GAAyB;AAAA;;AACvB,QAAMC,OAAO,GAAGxB,WAAW,CAAEyB,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;AACA,QAAME,eAAe,GAAG,CAAC,CAACF,OAAO,CAACG,IAAlC;AACA,QAAMC,aAAa,GAAG5B,WAAW,CAAEyB,KAAD,IAAWA,KAAK,CAACG,aAAlB,CAAjC;AACA,QAAMC,GAAG,GAAGhC,MAAM,CAAC,IAAD,CAAlB;AACA,QAAM,CAACiC,MAAD,EAASC,OAAT,IAAoBjC,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMkC,QAAQ,GAAG/B,WAAW,EAA5B;;AAEA,QAAMgC,UAAU,GAAG,MAAM;AACrBF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACtBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIAhC,EAAAA,SAAS,CAAC,MAAM;AACZiC,IAAAA,QAAQ,CAACf,gBAAgB,EAAjB,CAAR;AACH,GAFQ,EAEN,CAACe,QAAD,CAFM,CAAT;AAIA,SACEN,eAAe,iBACb;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,GAAG,EAAEG,GAAjB;AAAsB,MAAA,OAAO,EAAEI,UAA/B;AAAA,6BACE,QAAC,OAAD;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,OAAD;AACE,MAAA,OAAO,EAAEC,WADX;AAEE,MAAA,IAAI,EAAEJ,MAFR;AAGE,MAAA,QAAQ,EAAED,GAAG,CAACM,OAHhB;AAIE,MAAA,YAAY,EAAE;AACZC,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAJhB;AAQE,MAAA,eAAe,EAAE;AACfD,QAAAA,QAAQ,EAAE,KADK;AAEfC,QAAAA,UAAU,EAAE;AAFG,OARnB;AAAA,6BAaE,QAAC,GAAD;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,KAAK,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBAFJ;AA8BD;;GAlDQd,a;UACSvB,W,EAEMA,W,EAGLC,W;;;KANVsB,a;AAoDT,eAAeA,aAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { \r\n  Bell as BellIcon,\r\n  Star as StarIcon,\r\n  MessageCircle as MessageIcon,\r\n  Heart as HeartIcon,\r\n  User as ConnectionIcon, \r\n} from 'react-feather';\r\n\r\nimport { getNotifications } from '../../../../actions/notificationsActions';\r\n\r\n\r\nconst iconsMap = {\r\n  reviews: StarIcon,\r\n  new_comment: MessageIcon,\r\n  like: HeartIcon,\r\n  connection: ConnectionIcon\r\n};\r\n\r\nfunction Notifications() {\r\n  const account = useSelector((state) => state.account);\r\n  const isAuthenticated = !!account.user;\r\n  const notifications = useSelector((state) => state.notifications);\r\n  const ref = useRef(null);\r\n  const [isOpen, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  \r\n  const handleOpen = () => {\r\n      setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n      setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n      dispatch(getNotifications());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <>\r\n        <IconButton ref={ref} onClick={handleOpen}>\r\n          <SvgIcon>\r\n            <BellIcon></BellIcon>\r\n          </SvgIcon>\r\n        </IconButton>\r\n        <Popover\r\n          onCLose={handleClose}  \r\n          open={isOpen}  \r\n          anchorEl={ref.current}  \r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n          }}\r\n        >\r\n          <Box>\r\n            <Typography variant=\"h6\" color=\"textPrimary\">\r\n              Notificações\r\n            </Typography>\r\n          </Box>\r\n        </Popover>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n"]},"metadata":{},"sourceType":"module"}