{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\DEV\\\\Projeto-Social-Dev\\\\src\\\\pages\\\\Post\\\\New\\\\Preview\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport Markdown from 'react-markdown';\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { PostContext } from '../../../../context/PostContext';\nconst useStyles = makeStyles(theme => ({\n  imagePreview: {\n    width: \"100%\"\n  },\n  avatar: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction PostPreview() {\n  _s();\n\n  var _account$user, _account$user2;\n\n  const ctx = useContext(PostContext);\n  const {\n    image,\n    title,\n    tags,\n    markdownText\n  } = ctx;\n  const classes = useStyles();\n  const account = useSelector(state => state.account);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          src: (_account$user = account.user) === null || _account$user === void 0 ? void 0 : _account$user.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: (_account$user2 = account.user) === null || _account$user2 === void 0 ? void 0 : _account$user2.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          children: \"10 meses atr\\xE1s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: tags === null || tags === void 0 ? void 0 : tags.map(item => item.title).join(',')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Markdown, {\n      source: markdownText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"background\",\n      className: classes.imagePreview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PostPreview, \"PfKMC3ky4+2GFAjPYYW0pe+hlhk=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = PostPreview;\nexport default PostPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPreview\");","map":{"version":3,"sources":["E:/DEV/Projeto-Social-Dev/src/pages/Post/New/Preview/index.js"],"names":["React","useContext","useSelector","Typography","Divider","Avatar","Markdown","Box","makeStyles","PostContext","useStyles","theme","imagePreview","width","avatar","marginRight","spacing","PostPreview","ctx","image","title","tags","markdownText","classes","account","state","user","name","map","item","join"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Markdown from 'react-markdown';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { PostContext } from '../../../../context/PostContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    imagePreview: {\r\n      width: \"100%\",\r\n    },\r\n    avatar: {\r\n      marginRight: theme.spacing(1)\r\n    },\r\n  }));\r\n\r\nfunction PostPreview() {\r\n    const ctx = useContext(PostContext);\r\n    const { image, title, tags, markdownText } = ctx;\r\n    const classes = useStyles();\r\n    const account = useSelector(state => state.account);\r\n\r\n    return (\r\n        <>\r\n        <Box mb={2}>\r\n            <Typography variant=\"h2\">{title}</Typography>\r\n          </Box>  \r\n          <Box display=\"flex\" alignItems=\"center\" mb={2} >\r\n            <Box>\r\n              <Avatar className={classes.avatar} src={account.user?.avatar} />\r\n            </Box> \r\n            <Box>\r\n              <Typography variant='body1'>{account.user?.name}</Typography>\r\n              <Typography variant='body2' color=\"textSecondary\">10 meses atr√°s</Typography>\r\n            </Box>\r\n          </Box>\r\n          <Box mb={2}>\r\n              <Typography variant=\"body1\">{tags?.map(item => item.title).join(',')}</Typography>\r\n          </Box>\r\n          <Divider />  \r\n          <Markdown source={markdownText} />\r\n          {image && (\r\n            <img\r\n              src={image}\r\n              alt=\"background\"\r\n              className={classes.imagePreview}\r\n            />\r\n          )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostPreview;"]},"metadata":{},"sourceType":"module"}