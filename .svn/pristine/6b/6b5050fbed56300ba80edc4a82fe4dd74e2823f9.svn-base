{"ast":null,"code":"import axios from '../utils/axios';\n\nclass AuthService {\n  constructor() {\n    this.signInWithToken = () => {\n      return new Promise((resolve, reject) => {\n        axios.post('/api/home/me').then(response => {\n          if (response.data.user) {\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    };\n\n    this.setToken = token => {\n      localStorage.setItem(\"accessToken\", token);\n    };\n\n    this.getToken = () => localStorage.getItem(\"accessToken\");\n\n    this.isAuthenticated = () => !!this.getToken();\n  }\n\n}\n\nconst authService = new AuthService();\nexport default authService;","map":{"version":3,"sources":["E:/DEV/social-dev/src/services/authService.js"],"names":["axios","AuthService","signInWithToken","Promise","resolve","reject","post","then","response","data","user","error","catch","setToken","token","localStorage","setItem","getToken","getItem","isAuthenticated","authService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,WAAN,CAAkB;AAAA;AAAA,SACdC,eADc,GACI,MAAM;AACpB,aAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrCL,QAAAA,KAAK,CAACM,IAAN,CAAW,cAAX,EACCC,IADD,CACMC,QAAQ,IAAI;AACd,cAAIA,QAAQ,CAACC,IAAT,CAAcC,IAAlB,EAAwB;AACpBN,YAAAA,OAAO,CAACI,QAAQ,CAACC,IAAT,CAAcC,IAAf,CAAP;AACH,WAFD,MAEO;AACHL,YAAAA,MAAM,CAACG,QAAQ,CAACC,IAAT,CAAcE,KAAf,CAAN;AACH;AACJ,SAPD,EAQCC,KARD,CAQOD,KAAK,IAAI;AACZN,UAAAA,MAAM,CAACM,KAAD,CAAN;AACH,SAVD;AAWH,OAZM,CAAP;AAaH,KAfa;;AAAA,SAiBdE,QAjBc,GAiBFC,KAAD,IAAW;AAClBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCF,KAApC;AACH,KAnBa;;AAAA,SAqBdG,QArBc,GAqBH,MAAMF,YAAY,CAACG,OAAb,CAAqB,aAArB,CArBH;;AAAA,SAuBdC,eAvBc,GAuBI,MAAM,CAAC,CAAC,KAAKF,QAAL,EAvBZ;AAAA;;AAAA;;AA0BlB,MAAMG,WAAW,GAAG,IAAInB,WAAJ,EAApB;AAEA,eAAemB,WAAf","sourcesContent":["import axios from '../utils/axios';\r\n\r\nclass AuthService {\r\n    signInWithToken = () => {\r\n        return new Promise ((resolve, reject) => {\r\n            axios.post('/api/home/me')\r\n            .then(response => {\r\n                if (response.data.user) {\r\n                    resolve(response.data.user)\r\n                } else {\r\n                    reject(response.data.error)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n        })\r\n    }\r\n\r\n    setToken = (token) => {\r\n        localStorage.setItem(\"accessToken\", token);\r\n    }\r\n\r\n    getToken = () => localStorage.getItem(\"accessToken\")\r\n\r\n    isAuthenticated = () => !!this.getToken();\r\n}\r\n\r\nconst authService = new AuthService();\r\n\r\nexport default authService;"]},"metadata":{},"sourceType":"module"}