{"ast":null,"code":"import axios from '../utils/axios';\n\nclass AuthService {\n  constructor() {\n    this.signIn = (email, password) => {\n      return new Promise((resolve, reject) => {\n        axios.post('/api/home/login', {\n          email,\n          password\n        }).then(response => {\n          if (response.data.user) {\n            this.setToken('token');\n            resolve(response.data.user);\n          } else {\n            reject(response.data.error);\n          }\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    };\n\n    this.setToken = user => {\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    };\n\n    this.getToken = () => {\n      const user = localStorage.getItem(\"\");\n\n      if (user) {\n        return JSON.parse(user);\n      }\n\n      return user;\n    };\n\n    this.isAuthenticated = () => !!this.getToken();\n  }\n\n}\n\nconst authService = new AuthService();\nexport default authService;","map":{"version":3,"sources":["E:/DEV/social-dev/src/services/authService.js"],"names":["axios","AuthService","signIn","email","password","Promise","resolve","reject","post","then","response","data","user","setToken","error","catch","localStorage","setItem","JSON","stringify","getToken","getItem","parse","isAuthenticated","authService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,WAAN,CAAkB;AAAA;AAAA,SACdC,MADc,GACL,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC1B,aAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrCP,QAAAA,KAAK,CAACQ,IAAN,CAAW,iBAAX,EAA8B;AAACL,UAAAA,KAAD;AAAQC,UAAAA;AAAR,SAA9B,EACCK,IADD,CACMC,QAAQ,IAAI;AACd,cAAIA,QAAQ,CAACC,IAAT,CAAcC,IAAlB,EAAwB;AACrB,iBAAKC,QAAL,CAAc,OAAd;AACCP,YAAAA,OAAO,CAACI,QAAQ,CAACC,IAAT,CAAcC,IAAf,CAAP;AACH,WAHD,MAGO;AACHL,YAAAA,MAAM,CAACG,QAAQ,CAACC,IAAT,CAAcG,KAAf,CAAN;AACH;AACJ,SARD,EASCC,KATD,CASOD,KAAK,IAAI;AACZP,UAAAA,MAAM,CAACO,KAAD,CAAN;AACH,SAXD;AAYH,OAbM,CAAP;AAcH,KAhBa;;AAAA,SAkBdD,QAlBc,GAkBFD,IAAD,IAAU;AACjBI,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAA7B;AACH,KApBa;;AAAA,SAsBdQ,QAtBc,GAsBH,MAAM;AACb,YAAMR,IAAI,GAAGI,YAAY,CAACK,OAAb,CAAqB,EAArB,CAAb;;AACA,UAAIT,IAAJ,EAAU;AACN,eAAOM,IAAI,CAACI,KAAL,CAAWV,IAAX,CAAP;AACH;;AACD,aAAOA,IAAP;AACH,KA5Ba;;AAAA,SA8BdW,eA9Bc,GA8BI,MAAM,CAAC,CAAC,KAAKH,QAAL,EA9BZ;AAAA;;AAAA;;AAiClB,MAAMI,WAAW,GAAG,IAAIvB,WAAJ,EAApB;AAEA,eAAeuB,WAAf","sourcesContent":["import axios from '../utils/axios';\r\n\r\nclass AuthService {\r\n    signIn = (email, password) => {\r\n        return new Promise ((resolve, reject) => {\r\n            axios.post('/api/home/login', {email, password})\r\n            .then(response => {\r\n                if (response.data.user) {\r\n                   this.setToken('token')\r\n                    resolve(response.data.user)\r\n                } else {\r\n                    reject(response.data.error)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                reject(error)\r\n            })\r\n        })\r\n    }\r\n\r\n    setToken = (user) => {\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n    }\r\n\r\n    getToken = () => {\r\n        const user = localStorage.getItem(\"\")\r\n        if (user) {\r\n            return JSON.parse(user)\r\n        }\r\n        return user;\r\n    }\r\n\r\n    isAuthenticated = () => !!this.getToken();\r\n}\r\n\r\nconst authService = new AuthService();\r\n\r\nexport default authService;"]},"metadata":{},"sourceType":"module"}