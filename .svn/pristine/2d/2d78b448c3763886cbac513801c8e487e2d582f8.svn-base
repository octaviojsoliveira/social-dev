{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\DEV\\\\Projeto-Social-Dev\\\\src\\\\pages\\\\Home\\\\Header\\\\Notifications.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Bell as BellIcon, Star as StarIcon, MessageCircle as MessageIcon, Heart as HeartIcon, Users as ConnectionIcon } from 'react-feather';\nimport { getNotifications } from '../../../actions/notificationsActions';\nconst iconsMap = {\n  reviews: StarIcon,\n  new_comment: MessageIcon,\n  like: HeartIcon,\n  connection: ConnectionIcon\n};\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    background: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  }\n}));\n\nfunction Notifications() {\n  _s();\n\n  const account = useSelector(state => state.account);\n  const isAuthenticated = !!account.user;\n  const notifications = useSelector(state => state.notifications.notifications);\n  const ref = useRef(null);\n  const [isOpen, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(getNotifications());\n  }, [dispatch]);\n  return isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      ref: ref,\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(SvgIcon, {\n        children: /*#__PURE__*/_jsxDEV(BellIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      onClose: handleClose,\n      open: isOpen,\n      anchorEl: ref.current,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        p: 2,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"textPrimary\",\n          children: \"Notifica\\xE7\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: notifications.map(notification => {\n          const Icon = iconsMap[notification.type];\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                className: classes.icon,\n                children: /*#__PURE__*/_jsxDEV(SvgIcon, {\n                  children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: notification.title,\n              primaryTypographyProps: {\n                variant: 'subtitle2',\n                colo: 'textPrimary'\n              },\n              secondary: notification.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Notifications, \"fWKLFSz247jOjNtXyyxIvmZTP9o=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useStyles];\n});\n\n_c = Notifications;\nexport default Notifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"sources":["E:/DEV/Projeto-Social-Dev/src/pages/Home/Header/Notifications.js"],"names":["React","useRef","useState","useEffect","useSelector","useDispatch","SvgIcon","IconButton","Popover","Typography","Box","List","ListItem","ListItemText","ListItemAvatar","Avatar","makeStyles","Bell","BellIcon","Star","StarIcon","MessageCircle","MessageIcon","Heart","HeartIcon","Users","ConnectionIcon","getNotifications","iconsMap","reviews","new_comment","like","connection","useStyles","theme","icon","background","palette","secondary","main","color","contrastText","Notifications","account","state","isAuthenticated","user","notifications","ref","isOpen","setOpen","dispatch","classes","handleOpen","handleClose","current","vertical","horizontal","map","notification","Icon","type","title","variant","colo","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SACEC,IAAI,IAAIC,QADV,EAEEC,IAAI,IAAIC,QAFV,EAGEC,aAAa,IAAIC,WAHnB,EAIEC,KAAK,IAAIC,SAJX,EAKEC,KAAK,IAAIC,cALX,QAMO,eANP;AAQA,SAASC,gBAAT,QAAiC,uCAAjC;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,OAAO,EAAET,QADM;AAEfU,EAAAA,WAAW,EAAER,WAFE;AAGfS,EAAAA,IAAI,EAAEP,SAHS;AAIfQ,EAAAA,UAAU,EAAEN;AAJG,CAAjB;AAOA,MAAMO,SAAS,GAAGjB,UAAU,CAAEkB,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAcC,SAAd,CAAwBC,IADhC;AAEJC,IAAAA,KAAK,EAAEN,KAAK,CAACG,OAAN,CAAcC,SAAd,CAAwBG;AAF3B;AADiC,CAAZ,CAAD,CAA5B;;AAOA,SAASC,aAAT,GAAyB;AAAA;;AACvB,QAAMC,OAAO,GAAGvC,WAAW,CAAEwC,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;AACA,QAAME,eAAe,GAAG,CAAC,CAACF,OAAO,CAACG,IAAlC;AACA,QAAMC,aAAa,GAAG3C,WAAW,CAC9BwC,KAAD,IAAWA,KAAK,CAACG,aAAN,CAAoBA,aADA,CAAjC;AAIA,QAAMC,GAAG,GAAG/C,MAAM,CAAC,IAAD,CAAlB;AACA,QAAM,CAACgD,MAAD,EAASC,OAAT,IAAoBhD,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMiD,QAAQ,GAAG9C,WAAW,EAA5B;AAEA,QAAM+C,OAAO,GAAGnB,SAAS,EAAzB;;AAEA,QAAMoB,UAAU,GAAG,MAAM;AACvBH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMI,WAAW,GAAG,MAAM;AACxBJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA/C,EAAAA,SAAS,CAAC,MAAM;AACdgD,IAAAA,QAAQ,CAACxB,gBAAgB,EAAjB,CAAR;AACD,GAFQ,EAEN,CAACwB,QAAD,CAFM,CAAT;AAIA,SACEN,eAAe,iBACb;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,GAAG,EAAEG,GAAjB;AAAsB,MAAA,OAAO,EAAEK,UAA/B;AAAA,6BACE,QAAC,OAAD;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,OAAD;AACE,MAAA,OAAO,EAAEC,WADX;AAEE,MAAA,IAAI,EAAEL,MAFR;AAGE,MAAA,QAAQ,EAAED,GAAG,CAACO,OAHhB;AAIE,MAAA,YAAY,EAAE;AACZC,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAJhB;AAQE,MAAA,eAAe,EAAE;AACfD,QAAAA,QAAQ,EAAE,KADK;AAEfC,QAAAA,UAAU,EAAE;AAFG,OARnB;AAAA,8BAaE,QAAC,GAAD;AAAK,QAAA,CAAC,EAAE,CAAR;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,KAAK,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF,eAkBE,QAAC,IAAD;AAAA,kBACGV,aAAa,CAACW,GAAd,CAAmBC,YAAD,IAAkB;AACnC,gBAAMC,IAAI,GAAGhC,QAAQ,CAAC+B,YAAY,CAACE,IAAd,CAArB;AACA,8BACE,QAAC,QAAD;AAAA,oCACE,QAAC,cAAD;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAET,OAAO,CAACjB,IAA3B;AAAA,uCACE,QAAC,OAAD;AAAA,yCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,YAAD;AACE,cAAA,OAAO,EAAEwB,YAAY,CAACG,KADxB;AAEE,cAAA,sBAAsB,EAAE;AACtBC,gBAAAA,OAAO,EAAE,WADa;AAEtBC,gBAAAA,IAAI,EAAE;AAFgB,eAF1B;AAME,cAAA,SAAS,EAAEL,YAAY,CAACM;AAN1B;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAmBD,SArBA;AADH;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBAFJ;AAsDD;;GA/EQvB,a;UACStC,W,EAEMA,W,EAMLC,W,EAED4B,S;;;KAXTS,a;AAiFT,eAAeA,aAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Bell as BellIcon,\r\n  Star as StarIcon,\r\n  MessageCircle as MessageIcon,\r\n  Heart as HeartIcon,\r\n  Users as ConnectionIcon,\r\n} from 'react-feather';\r\n\r\nimport { getNotifications } from '../../../actions/notificationsActions';\r\n\r\nconst iconsMap = {\r\n  reviews: StarIcon,\r\n  new_comment: MessageIcon,\r\n  like: HeartIcon,\r\n  connection: ConnectionIcon,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    background: theme.palette.secondary.main,\r\n    color: theme.palette.secondary.contrastText,\r\n  },\r\n}));\r\n\r\nfunction Notifications() {\r\n  const account = useSelector((state) => state.account);\r\n  const isAuthenticated = !!account.user;\r\n  const notifications = useSelector(\r\n    (state) => state.notifications.notifications,\r\n  );\r\n\r\n  const ref = useRef(null);\r\n  const [isOpen, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getNotifications());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <>\r\n        <IconButton ref={ref} onClick={handleOpen}>\r\n          <SvgIcon>\r\n            <BellIcon />\r\n          </SvgIcon>\r\n        </IconButton>\r\n        <Popover\r\n          onClose={handleClose}\r\n          open={isOpen}\r\n          anchorEl={ref.current}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n        >\r\n          <Box p={2}>\r\n            <Typography variant=\"h6\" color=\"textPrimary\">\r\n              Notificações\r\n            </Typography>\r\n          </Box>\r\n          <List>\r\n            {notifications.map((notification) => {\r\n              const Icon = iconsMap[notification.type];\r\n              return (\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classes.icon}>\r\n                      <SvgIcon>\r\n                        <Icon />\r\n                      </SvgIcon>\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={notification.title}\r\n                    primaryTypographyProps={{\r\n                      variant: 'subtitle2',\r\n                      colo: 'textPrimary',\r\n                    }}\r\n                    secondary={notification.description}\r\n                  />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Popover>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Notifications;"]},"metadata":{},"sourceType":"module"}