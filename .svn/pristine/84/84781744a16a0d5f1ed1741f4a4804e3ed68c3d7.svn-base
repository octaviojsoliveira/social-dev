{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\DEV\\\\Projeto-Social-Dev\\\\src\\\\pages\\\\Post\\\\New\\\\Editor\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDropzone } from \"react-dropzone\";\nconst useStyles = makeStyles(theme => ({\n  image: {\n    height: 100\n  },\n  textArea: {\n    width: \"100%\",\n    height: \"80%\",\n    resize: \"none\",\n    border: \"none\",\n    outline: \"none\",\n    fontsize: 15\n  },\n  button: {\n    marginRight: theme.spacing(2)\n  }\n}));\nconst arrayTags = [{\n  title: 'react.js'\n}, {\n  title: 'node.js'\n}, {\n  title: 'dotnetcore'\n}, {\n  title: 'webdev'\n}, {\n  title: 'php'\n}];\n\nfunction PostEditor(image, setImage, title, setTitle, tags, setTags, markdownText, setMarkDownText) {\n  _s();\n\n  const classes = useStyles();\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      const base64data = reader.result;\n      setImage(base64data);\n    };\n  }, [setImage]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: \"image/*\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"title\",\n        placeholder: \"T\\xEDtulo\",\n        fullWidth: true,\n        value: title,\n        onChange: setTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        multiple: true,\n        id: \"tags-standard\",\n        options: arrayTags,\n        getOptionLabel: option => option.title,\n        value: tags,\n        onChange: setTags,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          variant: \"standard\",\n          placeholder: \"tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: classes.textArea,\n      placeholder: \"Editor Markdown\",\n      onChange: setMarkDownText,\n      value: markdownText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Carregar imagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"background\",\n      className: classes.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PostEditor, \"V++Jdc4hvUvPhKVe8dPNPBGKUsE=\", false, function () {\n  return [useStyles, useDropzone];\n});\n\n_c = PostEditor;\nexport default PostEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostEditor\");","map":{"version":3,"sources":["E:/DEV/Projeto-Social-Dev/src/pages/Post/New/Editor/index.js"],"names":["React","useState","useCallback","TextField","Autocomplete","Box","makeStyles","Button","useDropzone","useStyles","theme","image","height","textArea","width","resize","border","outline","fontsize","button","marginRight","spacing","arrayTags","title","PostEditor","setImage","setTitle","tags","setTags","markdownText","setMarkDownText","classes","onDrop","acceptedFiles","file","reader","FileReader","readAsDataURL","onloadend","base64data","result","getRootProps","getInputProps","multiple","accept","option","params"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n      height: 100,\r\n    },\r\n    textArea: {\r\n      width: \"100%\",\r\n      height: \"80%\",\r\n      resize: \"none\",\r\n      border: \"none\",\r\n      outline: \"none\",\r\n      fontsize: 15,\r\n    },\r\n    button: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  const arrayTags = [\r\n    { title: 'react.js' },\r\n    { title: 'node.js' },\r\n    { title: 'dotnetcore' },\r\n    { title: 'webdev' },\r\n    { title: 'php' },\r\n]\r\n\r\nfunction PostEditor(image, setImage, title, setTitle, tags, setTags, markdownText, setMarkDownText) {\r\n  const classes = useStyles();\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    const file = acceptedFiles[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      const base64data = reader.result;\r\n      setImage(base64data);\r\n    };\r\n  }, [setImage]);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/*\",\r\n  });\r\n    \r\n  return (\r\n    <>\r\n        <Box mb={2}>\r\n          <TextField\r\n            id=\"title\"\r\n            placeholder=\"TÃ­tulo\"\r\n            fullWidth\r\n            value={title}\r\n            onChange={setTitle}\r\n          />\r\n        </Box>\r\n        <Box mb={2}>\r\n          <Autocomplete\r\n            multiple\r\n            id=\"tags-standard\"\r\n            options={arrayTags}\r\n            getOptionLabel={(option) => option.title}\r\n            value={tags}\r\n            onChange={setTags}\r\n            renderInput={(params) => (\r\n              <TextField {...params} variant=\"standard\" placeholder=\"tags\" />\r\n            )}\r\n          />\r\n        </Box>\r\n        <textarea\r\n          className={classes.textArea}\r\n          placeholder=\"Editor Markdown\"\r\n          onChange={setMarkDownText}\r\n          value={markdownText}\r\n        ></textarea>\r\n        <div {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Carregar imagem\r\n          </Button>\r\n        </div>\r\n        {image && (\r\n          <img src={image} alt=\"background\" className={classes.image} />\r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostEditor;\r\n"]},"metadata":{},"sourceType":"module"}